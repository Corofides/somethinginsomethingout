---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jameslendrem.
--- DateTime: 23/03/2024 11:05
---

local pd <const> = playdate
local gfx <const> = pd.graphics

class("Button").extends(gfx.sprite)

function Button:init(x, y, width, height, text, emitter)

    self._emitter = emitter

    self._focus = false;
    self._active = false;

    self.width = width;
    self.height = height;

    --- self.this = self;
    self._textWidth = 0
    self._textHeight = 0

    self._text = text;

    self._buttonPositionX = x;
    self._buttonPositionY = y - (height / 2);

    self.x = x;
    self.y = y;

    local font = gfx.getFont();
    self._textHeight = font:getHeight();
    self._textWidth = font:getTextWidth(text);

    self:displayButton()

end

function Button:displayButton()

    local buttonImage = gfx.image.new(self.width, self.height)
    local textPositionX, textPositionY = self:calculateTextPosition()

    gfx.pushContext(buttonImage)
    if (self._focus) then
        gfx.drawRect(0, 0, self.width, self.height)

        if (self._active) then
            gfx.fillRect(0, 0, self.width, self.height)
        end

    end

    if (self._focus and self._active) then
        gfx.setImageDrawMode(gfx.kDrawModeFillWhite)
    end

    gfx.drawText(self._text, textPositionX, textPositionY);
    gfx.popContext();

    self:setImage(buttonImage)
    self:moveTo(self._buttonPositionX, self._buttonPositionY)
    self:add()

end

function Button:triggerActive(active)

    if (not self._focus) then
        self._active = false
        return;
    end

    self._active = active;
    self:displayButton()

    if (not self._active) then
        self:triggerClick()
    end
end

function Button:triggerFocus(focus)
    self._focus = focus
    self:displayButton()
end

function Button:triggerClick()
    self._emitter:emitEvent("buttonClick");
end

function Button:calculateTextPosition()

    local textPositionX = self.width / 2;
    textPositionX = textPositionX - (self._textWidth / 2)

    local textPositionY = self.height / 2
    textPositionY = textPositionY - (self._textHeight / 2)

    return textPositionX, textPositionY;
end

